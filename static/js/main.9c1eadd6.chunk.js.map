{"version":3,"sources":["components/Home/index.js","services/firebase.js","store/messages/actions.js","components/Message/index.js","components/ChatForm/ChatFormView.js","components/ChatForm/ChatFormContainer.js","store/chats/actions.js","components/ChatItem/index.js","components/AddChatForm/index.js","components/ChatList/index.js","utils/constants.js","store/chats/selectors.js","store/messages/selectors.js","components/Chats/index.js","components/Profile/index.js","store/articles/actions.js","store/articles/selectors.js","components/News/index.js","components/PublicRoute/index.js","components/PrivateRoute/index.js","components/Routes/index.js","store/profile/actions.js","store/profile/reducer.js","store/chats/reducer.js","store/messages/reducer.js","store/articles/reducer.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","onLogin","onSignUp","useState","login","setLogin","pass","setPass","Container","className","fluid","Row","Col","xs","to","Form","onSubmit","e","preventDefault","Control","placeholder","type","value","onChange","target","Button","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getDatabase","signUp","email","a","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","firbaseSignOut","ADD_MESSAGE","DELETE_MESSAGE","SET_MESSAGES","initMessages","dispatch","messagesDbRef","ref","onValue","snapshot","data","val","payload","addMessageFb","text","author","chatId","newId","Date","now","set","id","Message","ChatFormView","handleSubmit","handleChange","inputRef","as","variant","ChatForm","useRef","setValue","useCallback","current","focus","ADD_CHAT","DELETE_CHAT","SET_CHATS","initChats","chatsDbRef","chats","Object","values","ChatItem","chat","onDelete","useDispatch","ListGroup","Item","action","name","onClick","remove","deleteChatFb","AddChatForm","onAddChat","disabled","ChatList","onDeleteChat","map","AUTHORS","REQUEST_STATUS","selectChats","state","chatsStore","selectMessages","messagesStore","messages","Chats","timeout","useParams","history","useHistory","useSelector","selectChatExists","useMemo","find","chatExists","useEffect","sendMessage","clearTimeout","setTimeout","handleAddMessage","handleAddChat","addChat","handleDeleteChat","deleteChat","length","push","message","Profile","onLogout","setName","userDbRef","username","GET_ARTICLES_PENDING","GET_ARTICLES_SUCCESS","GET_ARTICLES_FAILURE","selectArticlesLoading","articlesStore","request","status","selectArticles","list","selectArticlesError","error","News","loading","articles","reload","fetch","response","ok","Error","json","result","console","log","art","title","Spinner","animation","PublicRoute","authed","props","PrivateRoute","Routes","setAuthed","setError","onAuthStateChanged","user","handleLogin","handleSignUp","handleLogout","path","exact","component","TOGGLE_CHECKBOX","CHANGE_NAME","initialState","checkboxState","middlewares","thunk","persistConfig","key","storage","rootReducer","combineReducers","profileStore","newChats","filter","newChatMessages","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c1eadd6.chunk.js","sourcesContent":["import {useState} from \"react\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {Container, Row, Col, Form, Button} from \"react-bootstrap\";\r\n\r\nexport const Home = ({onLogin, onSignUp}) => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n\r\n    const handleLoginChange = (e) => {\r\n        setLogin(e.target.value);\r\n    };\r\n\r\n    const handlePassChange = (e) => {\r\n        setPass(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        setLogin(\"\");\r\n        setPass(\"\");\r\n\r\n        if (!!onLogin) {\r\n            onLogin(login, pass);\r\n        } else {\r\n            onSignUp(login, pass);\r\n        }\r\n    };\r\n    return (\r\n        <Container className=\"container-lg mt-2\" fluid=\"md\">\r\n            <Row className=\"mb-2\">\r\n                <Col xs={2}>\r\n                    <Link to=\"/profile\">\r\n                        <h4>Profile page</h4>\r\n                    </Link>\r\n                </Col>\r\n                <Col xs={2}>\r\n                    <Link to=\"/chats\">\r\n                        <h4>Chats</h4>\r\n                    </Link>\r\n                </Col>\r\n                <Col xs={2}>\r\n                    <Link to=\"/news\">\r\n                        <h4>News</h4>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            <h2>This is home page</h2>\r\n            <h3>{!!onLogin ? 'Login' : 'SignUp'}</h3>\r\n            <Form onSubmit={handleSubmit} className=\"w-50 d-grid gap-1\">\r\n                <Form.Control placeholder=\"login\" type=\"text\" value={login} onChange={handleLoginChange}/>\r\n                <Form.Control placeholder=\"password\" type=\"password\" value={pass} onChange={handlePassChange}/>\r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword, signOut as firbaseSignOut} from \"firebase/auth\";\r\nimport {getDatabase} from \"firebase/database\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCZbDjb10lZWZNTDamXIGNZt1jbkactCko\",\r\n    authDomain: \"react-project-gb.firebaseapp.com\",\r\n    databaseURL: \"https://react-project-gb-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"react-project-gb\",\r\n    storageBucket: \"react-project-gb.appspot.com\",\r\n    messagingSenderId: \"635186210782\",\r\n    appId: \"1:635186210782:web:b57e1e255f848e287c1f4f\"\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\nexport const db = getDatabase();\r\n\r\nexport const signUp = async (email, pass) => {\r\n    await createUserWithEmailAndPassword(auth, email, pass);\r\n}\r\n\r\nexport const login = async (email, pass) => {\r\n    await signInWithEmailAndPassword(auth, email, pass);\r\n};\r\n\r\nexport const signOut = async () => {\r\n    await firbaseSignOut(auth);\r\n}\r\n","import {db} from \"../../services/firebase\";\r\nimport {onValue, ref, remove, set} from \"@firebase/database\";\r\n\r\nexport const ADD_MESSAGE = \"MESSAGES::ADD_MESSAGE\";\r\nexport const DELETE_MESSAGE = \"MESSAGES::DELETE_MESSAGE\";\r\nexport const SET_MESSAGES = \"MESSAGES::SET_MESSAGES\";\r\n\r\nexport const addMessage = (chatId, text, author) => ({\r\n    type: ADD_MESSAGE,\r\n    payload: {\r\n        chatId,\r\n        text,\r\n        author,\r\n    },\r\n});\r\n\r\nexport const deleteMessage = (chatId, id) => ({\r\n    type: DELETE_MESSAGE,\r\n    payload: {\r\n        chatId,\r\n        id,\r\n    },\r\n});\r\n\r\nconst setMessages = (messages) => ({\r\n    type: SET_MESSAGES,\r\n    payload: messages,\r\n});\r\n\r\nexport const initMessages = () => (dispatch) => {\r\n    const messagesDbRef = ref(db, 'messages');\r\n    onValue(messagesDbRef, (snapshot) => {\r\n        const data = snapshot.val();\r\n\r\n        dispatch(setMessages(data || {}));\r\n    });\r\n}\r\n\r\nexport const addMessageFb = (text, author, chatId) => () => {\r\n    const newId = `message-${Date.now()}`;\r\n    const messagesDbRef = ref(db, `messages/${chatId}/${newId}`);\r\n    set(messagesDbRef, {\r\n        author,\r\n        text,\r\n        id: newId,\r\n    });\r\n}\r\nexport const deleteMessagesFb = (chatId) => () => {\r\n    const messagesDbRef = ref(db, `messages/${chatId}`);\r\n    remove(messagesDbRef);\r\n}\r\n\r\n\r\n","import './Message.scss';\r\nimport { Col, Row } from 'react-bootstrap';\r\nexport const Message = ({author, text, id}) =>  {\r\n    return (\r\n        <Row className='text-primary mt-4'>\r\n            <Col xs={2} className='text-left '>{author}</Col>\r\n            <Col xs={8} className='text-center text-justify'>{text}</Col>\r\n            <Col xs={2} className='text-end'>{id}</Col>\r\n        </Row>\r\n    );\r\n}\r\n","import { Button, Form } from \"react-bootstrap\";\r\n\r\nexport const ChatFormView = ({ handleSubmit, handleChange, inputRef, value }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Message\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                ref={inputRef}\r\n                className=\"text-primary\"\r\n            />\r\n            <Button variant=\"outline-primary\" className=\"mt-2\" type=\"submit\">Send message</Button>\r\n        </Form>\r\n    );\r\n","import {useCallback, useRef, useState} from \"react\";\r\nimport { ChatFormView } from \"./ChatFormView\";\r\nexport function ChatForm({ onSubmit }) {\r\n    const inputRef = useRef(null);\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleChange = useCallback((e) => {\r\n        setValue(e.target.value);\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit(value);\r\n        setValue(\"\");\r\n\r\n        inputRef.current.focus();\r\n    };\r\n    return <ChatFormView value={value} inputRef={inputRef} handleChange={handleChange} handleSubmit={handleSubmit} />\r\n}\r\n","import {onValue, ref, set, remove} from \"@firebase/database\";\r\nimport {db} from \"../../services/firebase\";\r\n\r\nexport const ADD_CHAT = \"CHATS::ADD_CHAT\";\r\nexport const DELETE_CHAT = \"CHATS::DELETE_CHAT\";\r\nexport const SET_CHATS = \"CHATS::SET_CHATS\";\r\n\r\n\r\nexport const addChat = (name) => ({\r\n    type: ADD_CHAT,\r\n    payload: name,\r\n});\r\n\r\nexport const deleteChat = (id) => ({\r\n    type: DELETE_CHAT,\r\n    payload: id,\r\n});\r\n\r\nexport const setChats = (chats) => ({\r\n    type: SET_CHATS,\r\n    payload: chats,\r\n});\r\n\r\n\r\nexport const initChats = () => (dispatch) => {\r\n    const chatsDbRef = ref(db, \"chats\");\r\n    onValue(chatsDbRef, (snapshot) => {\r\n        const data = snapshot.val();\r\n        dispatch(setChats(Object.values(data || {})));\r\n    });\r\n};\r\n\r\nexport const addChatFb = (name) => () => {\r\n    const newId = `chat-${Date.now()}`;\r\n\r\n    const chatsDbRef = ref(db, `chats/${newId}`);\r\n\r\n    set(chatsDbRef, {\r\n        id: newId,\r\n        name,\r\n    });\r\n}\r\n\r\nexport const deleteChatFb = (id) => () => {\r\n    const chatsDbRef = ref(db, `chats/${id}`);\r\n    remove(chatsDbRef);\r\n}\r\n\r\n","import {Link} from \"react-router-dom\";\r\nimport { Button, ListGroup } from \"react-bootstrap\"\r\nimport {deleteChatFb} from \"../../store/chats/actions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteMessagesFb} from \"../../store/messages/actions\";\r\n\r\nexport const ChatItem = ({chat, id, onDelete}) => {\r\n    const dispatch = useDispatch();\r\n    const handleDeleteChat = () => {\r\n        dispatch(deleteChatFb(id));\r\n        dispatch(deleteMessagesFb(id))\r\n        onDelete(id);\r\n    }\r\n    return (\r\n        <div className=\"d-flex mt-1\">\r\n            <ListGroup.Item action className=\"d-flex text-primary p-0 w-50\" key={id}>\r\n                <Link className=\"d-block p-2 w-100 text-decoration-none\" to={`/chats/${id}`}>{chat.name}</Link>\r\n            </ListGroup.Item>\r\n            <Button onClick={handleDeleteChat}>Delete</Button>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport {Form, Button} from \"react-bootstrap\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addChatFb} from \"../../store/chats/actions\";\r\n\r\nexport const AddChatForm = ({onAddChat}) => {\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addChatFb(value))\r\n        setValue('');\r\n    }\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Control\r\n                placeholder=\"Add new Chat\"\r\n                value={value}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                className=\"text-primary my-1 w-50\"\r\n            />\r\n            <Button type=\"submit\" disabled={!value}>\r\n                Add chat\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n","import { ListGroup } from \"react-bootstrap\";\r\nimport { ChatItem } from \"../ChatItem\";\r\nimport { AddChatForm } from \"../AddChatForm\";\r\n\r\nexport function ChatList({ chats, onDeleteChat, onAddChat }) {\r\n    return (\r\n        <ListGroup>\r\n            {chats.map((chat) =>\r\n                <ChatItem chat={chat} key={chat.id} id={chat.id} onDelete={onDeleteChat}/>\r\n            )}\r\n            <AddChatForm onAddChat={onAddChat}/>\r\n        </ListGroup>\r\n    )\r\n}\r\n","export const AUTHORS = {\r\n    HUMAN: 'HUMAN',\r\n    BOT: 'Bot'\r\n}\r\nexport const PUBLIC_URL = \"https://api.spaceflightnewsapi.net/v3/articles\"\r\n\r\nexport const REQUEST_STATUS = {\r\n    IDLE: 0,\r\n    PENDING: 1,\r\n    SUCCESS: 2,\r\n    FAILURE: 3,\r\n};\r\n","export const selectChats = (state) => state.chatsStore.chats;\r\nexport const selectChatsLength = (state) => state.chatsStore.chats.length;\r\nexport const selectFirstChatId = (state) => state.chatsStore.chats?.[0].id;\r\nexport const selectIfChatExists = (id) => (state) =>\r\n    !!state.chatsStore.chats.find((chat) => id === chat.id);\r\n","export const selectMessages = (state) => state.messagesStore.messages;\r\nexport const selectMessagesByChatId = (chatId) => (state) =>\r\n    state.messagesStore.messages[chatId];\r\n","import { Container, Row, Col  } from 'react-bootstrap';\r\nimport {useCallback, useEffect, useMemo} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useParams,useHistory } from \"react-router-dom\"\r\n\r\nimport {addMessageFb, initMessages} from \"../../store/messages/actions\";\r\nimport { Message } from '../Message'\r\nimport { ChatForm } from '../ChatForm/ChatFormContainer'\r\nimport { ChatList } from '../ChatList'\r\nimport { AUTHORS } from \"../../utils/constants\";\r\n\r\nimport {addChat, deleteChat, initChats} from \"../../store/chats/actions\";\r\nimport { selectChats, selectIfChatExists } from \"../../store/chats/selectors\";\r\nimport { selectMessages } from \"../../store/messages/selectors\";\r\n\r\n\r\n\r\nfunction Chats() {\r\n    const { chatId } = useParams();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const messages = useSelector(selectMessages);\r\n    const chats = useSelector(selectChats);\r\n\r\n    const selectChatExists = useMemo(() => selectIfChatExists(chatId), [chatId]);\r\n    const chatExists = useSelector(selectChatExists);\r\n\r\n    useEffect(() => {\r\n        dispatch(initChats());\r\n        dispatch(initMessages());\r\n    }, []);\r\n\r\n    let timeout;\r\n    const sendMessage = useCallback(\r\n        (text, author) => {\r\n                dispatch(addMessageFb(text, author, chatId))\r\n                if (author === AUTHORS.HUMAN) {\r\n                clearTimeout(timeout);\r\n                timeout = setTimeout(() => {\r\n                    dispatch(addMessageFb(\"I am bot\",  AUTHORS.BOT, chatId));\r\n                }, 1500);\r\n            }\r\n        },\r\n        [dispatch, chatId]\r\n    );\r\n\r\n\r\n    const handleAddMessage = useCallback(\r\n        (text) => {\r\n            sendMessage(text, AUTHORS.HUMAN);\r\n        },\r\n        [sendMessage]\r\n    );\r\n\r\n    const handleAddChat = useCallback(\r\n        (name) => {\r\n            dispatch(addChat(name));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const handleDeleteChat = useCallback(\r\n        (id) => {\r\n            dispatch(deleteChat(id));\r\n            if (chatId !== id) {\r\n                return;\r\n            }\r\n\r\n            if (chats.length === 1) {\r\n                history.push(`/chats`);\r\n\r\n            } else {\r\n                history.push(`/chats/${chats[0].id}`);\r\n            }\r\n        },\r\n        [chatId, dispatch, chats, history]\r\n    );\r\n\r\n    return (\r\n        <Container className=\"App mt-2\" fluid=\"md\">\r\n            <Row className=\"mb-2\">\r\n                <Col xs={2} >\r\n                    <Link to=\"/profile\">\r\n                        <h4>Profile page</h4>\r\n                    </Link>\r\n                </Col>\r\n                <Col>\r\n                    <Link to=\"/news\">\r\n                        <h4>News</h4>\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col xs={4}>\r\n                    <ChatList\r\n                        chats={chats}\r\n                        onAddChat={handleAddChat}\r\n                        onDeleteChat={handleDeleteChat}\r\n                    />\r\n                </Col>\r\n                <Col xs={8}>\r\n                    {!!chatId && chatExists  && (\r\n                    <>\r\n                        <ChatForm onSubmit={handleAddMessage} />\r\n                        {(Object.values(messages[chatId] || {} || []).map((message) =>\r\n                            <Message\r\n                                key={message.id}\r\n                                author={message.author}\r\n                                text={message.text}\r\n                                id={message.id}\r\n\r\n                            />\r\n                        ))}\r\n                    </>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Chats;\r\n","import {Link} from \"react-router-dom\";\r\nimport {Container, Row, Col, Button, Form} from \"react-bootstrap\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {db} from \"../../services/firebase\";\r\nimport {onValue, ref, set} from \"@firebase/database\";\r\n\r\nexport const Profile = ({onLogout}) => {\r\n    const [value, setValue] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const handleClick = () => {\r\n        onLogout();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const userDbRef = ref(db, \"user\");\r\n        onValue(userDbRef, (snapshot) => {\r\n            const data = snapshot.val();\r\n            setName(data?.username || '');\r\n        });\r\n        return () => {\r\n            setName(\"\");\r\n        };\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setValue(\"\");\r\n        set(ref(db, \"user\"), {\r\n            username: value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-2\" fluid=\"md\">\r\n            <Row className=\"mb-2\">\r\n                <Col xs={2}>\r\n                    <Link to=\"/chats\">\r\n                        <h4>Chats</h4>\r\n                    </Link>\r\n                </Col>\r\n                <Col>\r\n                    <Link to=\"/news\">\r\n                        <h4>News</h4>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            <h2>This is profile page</h2>\r\n            <Form className=\"d-flex w-25 mb-1\" onSubmit={handleSubmit}>\r\n                <Form.Control type=\"text\" value={value} onChange={handleChange} />\r\n                <Button type=\"submit\">Submit</Button>\r\n            </Form>\r\n            <h4>{name}</h4>\r\n            <Button onClick={handleClick}>Logout</Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import { PUBLIC_URL } from \"../../utils/constants\";\r\n\r\nexport const GET_ARTICLES_PENDING = \"ARTICLES::GET_PENDING\";\r\nexport const GET_ARTICLES_SUCCESS = \"ARTICLES::GET_SUCCESS\";\r\nexport const GET_ARTICLES_FAILURE = \"ARTICLES::GET_FAILURE\";\r\n\r\nexport const getArticlesPending = () => ({\r\n    type: GET_ARTICLES_PENDING,\r\n});\r\n\r\nconst getArticlesSuccess = (articles) => ({\r\n    type: GET_ARTICLES_SUCCESS,\r\n    payload: articles,\r\n});\r\n\r\nconst getArticlesFailure = (error) => ({\r\n    type: GET_ARTICLES_FAILURE,\r\n    payload: error,\r\n});\r\n\r\nexport const getArticles = () => async (dispatch) => {\r\n    dispatch(getArticlesPending());\r\n\r\n    try {\r\n        const response = await fetch(PUBLIC_URL);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`error ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        dispatch(getArticlesSuccess(result));\r\n    } catch (e) {\r\n        console.log(e);\r\n        dispatch(getArticlesFailure(e.message));\r\n    }\r\n};\r\n","import { REQUEST_STATUS } from \"../../utils/constants\";\r\n\r\nexport const selectArticlesLoading = (state) =>\r\n    state.articlesStore.request.status === REQUEST_STATUS.PENDING;\r\nexport const selectArticles = (state) => state.articlesStore.list;\r\nexport const selectArticlesError = (state) => state.articlesStore.request.error;\r\n","import {Col, Container, Row, Spinner, Button} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getArticles} from \"../../store/articles/actions\";\r\nimport {selectArticles, selectArticlesError, selectArticlesLoading} from \"../../store/articles/selectors\";\r\n\r\nexport const News = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const error = useSelector(selectArticlesError)\r\n    const loading  = useSelector(selectArticlesLoading)\r\n    const articles  = useSelector(selectArticles)\r\n\r\n    const reload = () => {\r\n        dispatch(getArticles());\r\n    }\r\n\r\n    useEffect(() => {\r\n        reload();\r\n    }, []);\r\n    return (\r\n        <Container className=\"container-lg mt-2\" fluid=\"md\">\r\n            <Row className=\"mb-2\">\r\n                <Col xs={2}>\r\n                    <Link to=\"/profile\">\r\n                        <h4>Profile page</h4>\r\n                    </Link>\r\n                </Col>\r\n                <Col>\r\n                    <Link to=\"/chats\">\r\n                        <h4>Chats</h4>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <h2>News</h2>\r\n                {error ? (\r\n                    <div className=\"text-center\">\r\n                        <h4>Error: {error}</h4>\r\n                        <Button className=\"w-25\" onClick={reload}>Refresh</Button>\r\n                    </div>\r\n                ) : (\r\n                   articles.map((art) => (\r\n                        <article key={art.id}>\r\n                            <h4>{art.title}</h4>\r\n                        </article>\r\n                   ))\r\n                )}\r\n                {loading && <Spinner className=\"m-auto\" animation=\"border\" variant=\"primary\" />}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({ authed, ...props }) =>\r\n    !authed ? <Route {...props} /> : <Redirect to=\"/profile\" />;\r\n","import {Route, Redirect} from \"react-router-dom\"\r\n\r\nexport const PrivateRoute = ({authed, ...props}) =>\r\n    authed ? <Route {...props} /> : <Redirect to=\"/login\" />;\r\n\r\n","import {useEffect, useState} from \"react\";\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\nimport {Home} from \"../Home\"\r\nimport Chats from \"../Chats\"\r\nimport {Profile} from \"../Profile\";\r\nimport {News} from \"../News\";\r\nimport {PublicRoute} from \"../PublicRoute\";\r\nimport {PrivateRoute} from \"../PrivateRoute\"\r\nimport {auth, login, signOut, signUp} from \"../../services/firebase\";\r\nimport {onAuthStateChanged} from \"firebase/auth\";\r\n\r\nexport const Routes = () => {\r\n    const [authed, setAuthed] = useState(false);\r\n    const [error, setError] = useState('')\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setAuthed(true);\r\n            } else {\r\n                setAuthed(false);\r\n            }\r\n        });\r\n\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const handleLogin = async (email, pass) => {\r\n        try {\r\n            await login(email, pass)\r\n            setAuthed(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n            setError(e);\r\n        }\r\n    };\r\n\r\n    const handleSignUp = async (email, pass) => {\r\n        try {\r\n            await signUp(email, pass)\r\n            setAuthed(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n            setError(e);\r\n        }\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await signOut();\r\n        } catch (e) {\r\n            console.log(e);\r\n            setError(e);\r\n        }\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <PublicRoute path=\"/\" exact authed={authed}>\r\n                    <Home onLogin={handleSignUp}/>\r\n                </PublicRoute>\r\n                <PublicRoute path=\"/login\" exact authed={authed}>\r\n                    <Home onLogin={handleLogin}/>\r\n                </PublicRoute>\r\n                <PublicRoute path=\"/signup\" exact authed={authed}>\r\n                    <Home onSignUp={handleSignUp}/>\r\n                </PublicRoute>\r\n                <PrivateRoute path=\"/profile\" exact authed={authed}>\r\n                    <Profile onLogout={handleLogout}/>\r\n                </PrivateRoute>\r\n                <PrivateRoute\r\n                    path=\"/chats/:chatId?\"\r\n                    component={Chats}\r\n                    authed={authed}\r\n                />\r\n                <Route path=\"/news\">\r\n                    <News/>\r\n                </Route>\r\n                <Route>\r\n                    <h4>{!!error ? error :'404'}</h4>\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","export const  TOGGLE_CHECKBOX = 'PROFILE::TOGGLE_CHECKBOX';\r\nexport const CHANGE_NAME = \"PROFILE::CHANGE_NAME\";\r\n\r\nexport const toggleCheckbox = {\r\n    type: TOGGLE_CHECKBOX,\r\n}\r\n\r\nexport const changeName = (name) => ({\r\n    type: CHANGE_NAME,\r\n    payload: name,\r\n});\r\n","import { TOGGLE_CHECKBOX, CHANGE_NAME } from \"./actions\";\r\n\r\nconst initialState = {\r\n    checkboxState: false,\r\n    name: \"default\",\r\n}\r\n\r\nexport const  profileReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case TOGGLE_CHECKBOX: {\r\n            return {\r\n                ...state,\r\n                checkboxState: !state.checkboxState\r\n            }\r\n        }\r\n        case CHANGE_NAME: {\r\n            return {\r\n                ...state,\r\n                name: payload,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {ADD_CHAT, DELETE_CHAT, SET_CHATS} from './actions';\r\n\r\nconst initialState = {\r\n    chats: [],\r\n};\r\n\r\nexport const chatsReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ADD_CHAT: {\r\n            return {\r\n                ...state,\r\n                chats: [...state.chats, { id: `chats-${Date.now()}`, name: payload }],\r\n            };\r\n        }\r\n        case DELETE_CHAT: {\r\n            const newChats = state.chats.filter(({ id }) => id !== payload);\r\n            return {\r\n                ...state,\r\n                chats: newChats,\r\n            };\r\n        }\r\n        case SET_CHATS: {\r\n            return {\r\n                ...state,\r\n                chats: payload,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { ADD_MESSAGE, DELETE_MESSAGE, SET_MESSAGES } from \"./actions\";\r\n\r\nconst initialState = {\r\n    messages: {},\r\n};\r\n\r\nexport const messagesReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ADD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: {\r\n                    ...state.messages,\r\n                    [payload.chatId]: [\r\n                        ...(Object.values(state.messages[payload.chatId]) || {} || []),\r\n                        {\r\n                            id: `message-${Date.now()}`,\r\n                            text: payload.text,\r\n                            author: payload.author,\r\n                        },\r\n                    ],\r\n                },\r\n            };\r\n        }\r\n        case DELETE_MESSAGE: {\r\n            const newChatMessages = state.messages[payload.chatId].filter(\r\n                ({ id }) => id !== payload.id\r\n            );\r\n\r\n            return {\r\n                ...state,\r\n                messages: {\r\n                    ...state.messages,\r\n                    [payload.chatId]: newChatMessages,\r\n                },\r\n            };\r\n        }\r\n\r\n        case SET_MESSAGES: {\r\n            return {\r\n                ...state,\r\n                messages: payload,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    GET_ARTICLES_PENDING,\r\n    GET_ARTICLES_SUCCESS,\r\n    GET_ARTICLES_FAILURE,\r\n} from \"./actions\";\r\nimport { REQUEST_STATUS } from \"../../utils/constants\";\r\n\r\nconst initialState = {\r\n    list: [],\r\n    request: {\r\n        error: null,\r\n        status: REQUEST_STATUS.IDLE,\r\n    },\r\n};\r\n\r\nexport const articlesReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case GET_ARTICLES_PENDING: {\r\n            return {\r\n                ...state,\r\n                request: {\r\n                    error: null,\r\n                    status: REQUEST_STATUS.PENDING,\r\n                },\r\n            };\r\n        }\r\n        case GET_ARTICLES_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                request: {\r\n                    ...state.request,\r\n                    status: REQUEST_STATUS.SUCCESS,\r\n                },\r\n                list: payload,\r\n            };\r\n        }\r\n        case GET_ARTICLES_FAILURE: {\r\n            return {\r\n                ...state,\r\n                request: {\r\n                    error: payload,\r\n                    status: REQUEST_STATUS.FAILURE,\r\n                },\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { profileReducer } from \"./profile/reducer\";\r\nimport { chatsReducer } from \"./chats/reducer\";\r\nimport { messagesReducer } from \"./messages/reducer\";\r\nimport {articlesReducer} from \"./articles/reducer\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n};\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profileStore: profileReducer,\r\n    chatsStore: chatsReducer,\r\n    messagesStore: messagesReducer,\r\n    articlesStore: articlesReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n    persistedReducer,\r\n    composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import { Provider } from \"react-redux\";\nimport './App.scss';\nimport { Routes } from \"./components/Routes\";\nimport { store, persistor } from \"./store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <Routes />\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}